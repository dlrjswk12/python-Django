package ch01_fundamental;

public class Test격언들 {

}
/*
 * 좋은 테스트를 작성하기 위해 참조할 팁들 
 * 
 * 1. 단위 테스트 케이스의 이름은 명확하고 일관된 테스트를 반영해야 하므로
 *    길고 상세하게 기술하여도 된다
 * 2. 외부 시스템이나 서비스에 대한 의존성이 낮은 메소드 부터
 *    차츰 확장해 간다.
 * 3. 하나의 테스트 케이스는 하나의 시나리오만 테스트한다.
 * 4. 불필요한 검증 구문은 과감히 생략하라.
 * 5. 테스트를 위한 코드는 제품코드에서 분리되기 쉽도록 별도의 소스폴더로
 *    관리하는 것이 좋다.
 * 6. 각 테스트는 상호 독립성을 유지하는게 좋다.
 * 7. 테스트에 필요한 외부서비스와 상태가 있다면 스텁으로 제공하는게 바람직하다
 * 8. 시스템 설정파일에 관한 단위 테스트는 작성하지 않는다.
 * 9. private 메소드도 적절한 단위 테스트를 작성해야 한다.
 * 10.각 단위 테스트 메소드는 정확히 하나의 검증 구분을 가져야 한다.
 * 11.예견되는 예외 사항을 테스트 하는 단위 테스트 코드를 작성한다.
 * 12.가장 적합한 검증 구문을 사용한다.
 * 13.검증 구문 파라미터들은 적합한 순서대로 배치한다.
 * 14.단위 테스트 내에서 아무것도 출력하지 않는게 좋다.
 * 15.static 변수를 테스트 클래스에서 사용하지 않는다.
 * 16.예외 발생시 단순히 테스트 실패하기 위한 catch 구문을 작성하지 않는다.
 * 17.간접적인 테스터에 의존하지 않는다.
 * 18.위 테스트를 자동으로 실행하게 한다.
 * 19.단위 테스트는 버그만을 찾기 위한 것은 아니다.
 * 20.테스트(단위,통합,성능,인수)는 모두 논리적인
 *    버그를 추출하는데 활용한다.
 * 21.테스트 정책 및 전략에 대한 기술(IEEE829표준에 따름)
 *    테스트 일정,테스트 시나리오, 테스트케이스를 계획한다.
 * 22.이러한 계획서는 요구사항 정의 단계에서 착수하여 구현단계
 *    에서 마무리한다. 
 *    
 */
